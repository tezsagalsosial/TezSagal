# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-10 13:12
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import doctor.options.tools


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.ImageField(upload_to='banners/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Əsas telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Əsas email')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='facebook linki')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='twitter linki')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='linkedin linki')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='instagram linki')),
                ('pinterest', models.URLField(blank=True, null=True, verbose_name='pinterest linki')),
                ('locations', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ərazi haqqında')),
                ('phone1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Əlaqə nömrəsi 1')),
                ('phone2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Əlaqə nömrəsi 2')),
                ('email1', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Əlavə email 1')),
                ('email2', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Əlavə email 2')),
            ],
            options={
                'verbose_name': 'Əsas kontakt',
                'verbose_name_plural': 'Əsas kontaktlar',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='BaseSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Başlıq')),
                ('sub_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alt mövzu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Təsvir')),
                ('image', models.ImageField(upload_to=doctor.options.tools.get_base_slider, verbose_name='Şəkil')),
                ('status', models.BooleanField(default=True, verbose_name='Saytda görünüşü')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Slayder',
                'verbose_name_plural': 'Slayderlər',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.IntegerField(default=5)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Rəy',
                'verbose_name_plural': 'Rəylər',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='BlogTv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adı')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefon')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Mesaj')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mesaj',
                'verbose_name_plural': 'Mesajlar',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Şəhər',
                'verbose_name_plural': 'Şəhərlər',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_name', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('qebul_qiymeti', models.IntegerField(blank=True, null=True)),
                ('prize_type', models.CharField(blank=True, choices=[('azn', 'AZN'), ('rub', 'RUB'), ('usd', 'USD'), ('eur', 'EUR'), ('gel', 'GEL'), ('try', 'TRY')], max_length=100, null=True)),
                ('pasient_types', models.CharField(blank=True, max_length=255, null=True)),
                ('pasient_types_az', models.CharField(blank=True, max_length=255, null=True)),
                ('pasient_types_ka', models.CharField(blank=True, max_length=255, null=True)),
                ('pasient_types_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('work_place', models.CharField(blank=True, max_length=255, null=True)),
                ('work_place_az', models.CharField(blank=True, max_length=255, null=True)),
                ('work_place_ka', models.CharField(blank=True, max_length=255, null=True)),
                ('work_place_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_link', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.TimeField(default=django.utils.timezone.now)),
                ('end_date', models.TimeField(default=django.utils.timezone.now)),
                ('step_1', models.BooleanField(default=False)),
                ('step_2', models.BooleanField(default=False)),
                ('step_3', models.BooleanField(default=False)),
                ('step_4', models.BooleanField(default=False)),
                ('step_5', models.BooleanField(default=False)),
                ('education', models.TextField(blank=True, null=True)),
                ('education_az', models.TextField(blank=True, null=True)),
                ('education_ka', models.TextField(blank=True, null=True)),
                ('education_ru', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_az', models.TextField(blank=True, null=True)),
                ('description_ka', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('job_description_az', models.TextField(blank=True, null=True)),
                ('job_description_ka', models.TextField(blank=True, null=True)),
                ('job_description_ru', models.TextField(blank=True, null=True)),
                ('goals', models.TextField(blank=True, null=True)),
                ('goals_az', models.TextField(blank=True, null=True)),
                ('goals_ka', models.TextField(blank=True, null=True)),
                ('goals_ru', models.TextField(blank=True, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('tesdiq', models.BooleanField(default=False)),
                ('send_message', models.BooleanField(default=False)),
                ('payment_status', models.BooleanField(default=False, verbose_name='Ödəniş statusu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Başlıq')),
                ('image', models.ImageField(blank=True, null=True, upload_to=doctor.options.tools.get_base_blog, verbose_name='Şəkil')),
                ('text', models.TextField(verbose_name='Məqalə')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
            ],
            options={
                'verbose_name': 'Bloq',
                'verbose_name_plural': 'Bloqlar',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DoctorCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Country')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorTimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.BooleanField(default=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
            ],
            options={
                'verbose_name': 'Həkimin cədvəli',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DoctorXestelik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meet_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('question', models.BooleanField(default=False)),
                ('text', models.TextField(default='')),
                ('tarix', models.TimeField(default=django.utils.timezone.now)),
                ('payment', models.IntegerField(choices=[(1, 'Nəğd'), (2, 'Kartla')], default=2)),
                ('status', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
                ('meet_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='doctor.DoctorTimeTable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('prize', models.FloatField(default=0)),
                ('data', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('base_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SponsorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField(blank=True, null=True)),
                ('prize', models.FloatField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('base_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Xestelik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Xəstəlik',
                'verbose_name_plural': 'Xəstəliklər',
            },
        ),
        migrations.AddField(
            model_name='doctorxestelik',
            name='xestelik',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.Xestelik'),
        ),
        migrations.AddField(
            model_name='blogcomment',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='doctor.Doctor'),
        ),
        migrations.AddField(
            model_name='blogcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
